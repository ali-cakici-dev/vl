# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mifare/classic/counter/commit.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mifare/classic/counter/commit.proto',
  package='mifare.classic.counter.commit',
  syntax='proto2',
  serialized_pb=_b('\n#mifare/classic/counter/commit.proto\x12\x1dmifare.classic.counter.commit\"\"\n\rCommitCounter\x12\x11\n\tdst_block\x18\x01 \x02(\r')
)




_COMMITCOUNTER = _descriptor.Descriptor(
  name='CommitCounter',
  full_name='mifare.classic.counter.commit.CommitCounter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dst_block', full_name='mifare.classic.counter.commit.CommitCounter.dst_block', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=104,
)

DESCRIPTOR.message_types_by_name['CommitCounter'] = _COMMITCOUNTER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommitCounter = _reflection.GeneratedProtocolMessageType('CommitCounter', (_message.Message,), dict(
  DESCRIPTOR = _COMMITCOUNTER,
  __module__ = 'mifare.classic.counter.commit_pb2'
  # @@protoc_insertion_point(class_scope:mifare.classic.counter.commit.CommitCounter)
  ))
_sym_db.RegisterMessage(CommitCounter)


# @@protoc_insertion_point(module_scope)
