# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: commands.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from misc import leds_pb2 as misc_dot_leds__pb2
from misc import device_pb2 as misc_dot_device__pb2
from misc import reboot_pb2 as misc_dot_reboot__pb2
from misc import buzzer_pb2 as misc_dot_buzzer__pb2
from misc import stats_pb2 as misc_dot_stats__pb2
from misc import echo_pb2 as misc_dot_echo__pb2
from misc import baudrate_pb2 as misc_dot_baudrate__pb2
from misc import lan_settings_pb2 as misc_dot_lan__settings__pb2
from srv import challenge_pb2 as srv_dot_challenge__pb2
from srv import protection_pb2 as srv_dot_protection__pb2
from srv import firmware_update_pb2 as srv_dot_firmware__update__pb2
from srv import diagnostic_pb2 as srv_dot_diagnostic__pb2
from srv import upload_config_pb2 as srv_dot_upload__config__pb2
from contactless import poll_for_token_pb2 as contactless_dot_poll__for__token__pb2
from contactless import transaction_pb2 as contactless_dot_transaction__pb2
from contactless import emv_removal_pb2 as contactless_dot_emv__removal__pb2
from contactless import transceive_pb2 as contactless_dot_transceive__pb2
from contactless import iso14443_4_pb2 as contactless_dot_iso14443__4__pb2
from contactless import iso14443_4a_pb2 as contactless_dot_iso14443__4a__pb2
from contactless import rf_field_pb2 as contactless_dot_rf__field__pb2
from mifare.classic import auth_pb2 as mifare_dot_classic_dot_auth__pb2
from mifare.classic import read_pb2 as mifare_dot_classic_dot_read__pb2
from mifare.classic import write_pb2 as mifare_dot_classic_dot_write__pb2
from mifare.classic import bulk_pb2 as mifare_dot_classic_dot_bulk__pb2
from mifare.classic.counter import commit_pb2 as mifare_dot_classic_dot_counter_dot_commit__pb2
from mifare.classic.counter import copy_pb2 as mifare_dot_classic_dot_counter_dot_copy__pb2
from mifare.classic.counter import get_pb2 as mifare_dot_classic_dot_counter_dot_get__pb2
from mifare.classic.counter import modify_pb2 as mifare_dot_classic_dot_counter_dot_modify__pb2
from mifare.classic.counter import set_pb2 as mifare_dot_classic_dot_counter_dot_set__pb2
from mifare.classic.sector import read_sector_pb2 as mifare_dot_classic_dot_sector_dot_read__sector__pb2
from mifare.classic.sector import write_sector_pb2 as mifare_dot_classic_dot_sector_dot_write__sector__pb2
from mifare.plus import auth_pb2 as mifare_dot_plus_dot_auth__pb2
from mifare.plus import read_pb2 as mifare_dot_plus_dot_read__pb2
from mifare.plus import write_pb2 as mifare_dot_plus_dot_write__pb2
from mifare.plus import bulk_pb2 as mifare_dot_plus_dot_bulk__pb2
from mifare.plus.counter import commit_pb2 as mifare_dot_plus_dot_counter_dot_commit__pb2
from mifare.plus.counter import copy_pb2 as mifare_dot_plus_dot_counter_dot_copy__pb2
from mifare.plus.counter import get_pb2 as mifare_dot_plus_dot_counter_dot_get__pb2
from mifare.plus.counter import modify_pb2 as mifare_dot_plus_dot_counter_dot_modify__pb2
from mifare.plus.counter import set_pb2 as mifare_dot_plus_dot_counter_dot_set__pb2
from mifare.av2 import host_auth_pb2 as mifare_dot_av2_dot_host__auth__pb2
from mifare.av2 import change_keyentry_pb2 as mifare_dot_av2_dot_change__keyentry__pb2
from mifare.av2 import unlock_pb2 as mifare_dot_av2_dot_unlock__pb2
from mifare.ultralight import read_pb2 as mifare_dot_ultralight_dot_read__pb2
from mifare.ultralight import write_pb2 as mifare_dot_ultralight_dot_write__pb2
from mifare.ultralight import version_pb2 as mifare_dot_ultralight_dot_version__pb2
from mifare.ultralight import bulk_pb2 as mifare_dot_ultralight_dot_bulk__pb2
from mifare.ultralight import auth_pb2 as mifare_dot_ultralight_dot_auth__pb2
from mifare.ultralight import password_pb2 as mifare_dot_ultralight_dot_password__pb2
from mifare.ultralight.counter import get_pb2 as mifare_dot_ultralight_dot_counter_dot_get__pb2
from mifare.ultralight.counter import increment_pb2 as mifare_dot_ultralight_dot_counter_dot_increment__pb2
from mifare.generic import get_version_pb2 as mifare_dot_generic_dot_get__version__pb2
from pinpad import online_pin_pb2 as pinpad_dot_online__pin__pb2
from contact import power_on_pb2 as contact_dot_power__on__pb2
from contact import power_off_pb2 as contact_dot_power__off__pb2
from contact import iso7816_4_pb2 as contact_dot_iso7816__4__pb2
from contact import transaction_pb2 as contact_dot_transaction__pb2
from sri512 import read_pb2 as sri512_dot_read__pb2
from sri512 import write_pb2 as sri512_dot_write__pb2
from ntag import select_pb2 as ntag_dot_select__pb2
from ntag import auth_pb2 as ntag_dot_auth__pb2
from ntag import read_pb2 as ntag_dot_read__pb2
from ntag import write_pb2 as ntag_dot_write__pb2
from gui import screen_pb2 as gui_dot_screen__pb2
from gui import input_dialog_pb2 as gui_dot_input__dialog__pb2
from gui import menu_dialog_pb2 as gui_dot_menu__dialog__pb2
from gui import draw_bitmap_pb2 as gui_dot_draw__bitmap__pb2
from gui import slideshow_pb2 as gui_dot_slideshow__pb2
from touchscreen import poll_touchscreen_pb2 as touchscreen_dot_poll__touchscreen__pb2
from complex import poll_for_event_pb2 as complex_dot_poll__for__event__pb2
from qrcode import poll_for_qrcode_pb2 as qrcode_dot_poll__for__qrcode__pb2
from qrcode import exchange_pb2 as qrcode_dot_exchange__pb2
from cipurse import append_record_pb2 as cipurse_dot_append__record__pb2
from cipurse import auth_pb2 as cipurse_dot_auth__pb2
from cipurse import authorize_sam_pb2 as cipurse_dot_authorize__sam__pb2
from cipurse import modify_value_pb2 as cipurse_dot_modify__value__pb2
from cipurse import read_binary_pb2 as cipurse_dot_read__binary__pb2
from cipurse import read_record_pb2 as cipurse_dot_read__record__pb2
from cipurse import read_value_pb2 as cipurse_dot_read__value__pb2
from cipurse import select_pb2 as cipurse_dot_select__pb2
from cipurse import update_binary_pb2 as cipurse_dot_update__binary__pb2
from cipurse import update_record_pb2 as cipurse_dot_update__record__pb2
from turnstile import passage_pb2 as turnstile_dot_passage__pb2
from troika.av3 import read_ticket_pb2 as troika_dot_av3_dot_read__ticket__pb2
from troika.av3 import write_ticket_pb2 as troika_dot_av3_dot_write__ticket__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='commands.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x0e\x63ommands.proto\x1a\x0fmisc/leds.proto\x1a\x11misc/device.proto\x1a\x11misc/reboot.proto\x1a\x11misc/buzzer.proto\x1a\x10misc/stats.proto\x1a\x0fmisc/echo.proto\x1a\x13misc/baudrate.proto\x1a\x17misc/lan_settings.proto\x1a\x13srv/challenge.proto\x1a\x14srv/protection.proto\x1a\x19srv/firmware_update.proto\x1a\x14srv/diagnostic.proto\x1a\x17srv/upload_config.proto\x1a contactless/poll_for_token.proto\x1a\x1d\x63ontactless/transaction.proto\x1a\x1d\x63ontactless/emv_removal.proto\x1a\x1c\x63ontactless/transceive.proto\x1a\x1c\x63ontactless/iso14443_4.proto\x1a\x1d\x63ontactless/iso14443_4a.proto\x1a\x1a\x63ontactless/rf_field.proto\x1a\x19mifare/classic/auth.proto\x1a\x19mifare/classic/read.proto\x1a\x1amifare/classic/write.proto\x1a\x19mifare/classic/bulk.proto\x1a#mifare/classic/counter/commit.proto\x1a!mifare/classic/counter/copy.proto\x1a mifare/classic/counter/get.proto\x1a#mifare/classic/counter/modify.proto\x1a mifare/classic/counter/set.proto\x1a\'mifare/classic/sector/read_sector.proto\x1a(mifare/classic/sector/write_sector.proto\x1a\x16mifare/plus/auth.proto\x1a\x16mifare/plus/read.proto\x1a\x17mifare/plus/write.proto\x1a\x16mifare/plus/bulk.proto\x1a mifare/plus/counter/commit.proto\x1a\x1emifare/plus/counter/copy.proto\x1a\x1dmifare/plus/counter/get.proto\x1a mifare/plus/counter/modify.proto\x1a\x1dmifare/plus/counter/set.proto\x1a\x1amifare/av2/host_auth.proto\x1a mifare/av2/change_keyentry.proto\x1a\x17mifare/av2/unlock.proto\x1a\x1cmifare/ultralight/read.proto\x1a\x1dmifare/ultralight/write.proto\x1a\x1fmifare/ultralight/version.proto\x1a\x1cmifare/ultralight/bulk.proto\x1a\x1cmifare/ultralight/auth.proto\x1a mifare/ultralight/password.proto\x1a#mifare/ultralight/counter/get.proto\x1a)mifare/ultralight/counter/increment.proto\x1a mifare/generic/get_version.proto\x1a\x17pinpad/online_pin.proto\x1a\x16\x63ontact/power_on.proto\x1a\x17\x63ontact/power_off.proto\x1a\x17\x63ontact/iso7816_4.proto\x1a\x19\x63ontact/transaction.proto\x1a\x11sri512/read.proto\x1a\x12sri512/write.proto\x1a\x11ntag/select.proto\x1a\x0fntag/auth.proto\x1a\x0fntag/read.proto\x1a\x10ntag/write.proto\x1a\x10gui/screen.proto\x1a\x16gui/input_dialog.proto\x1a\x15gui/menu_dialog.proto\x1a\x15gui/draw_bitmap.proto\x1a\x13gui/slideshow.proto\x1a\"touchscreen/poll_touchscreen.proto\x1a\x1c\x63omplex/poll_for_event.proto\x1a\x1cqrcode/poll_for_qrcode.proto\x1a\x15qrcode/exchange.proto\x1a\x1b\x63ipurse/append_record.proto\x1a\x12\x63ipurse/auth.proto\x1a\x1b\x63ipurse/authorize_sam.proto\x1a\x1a\x63ipurse/modify_value.proto\x1a\x19\x63ipurse/read_binary.proto\x1a\x19\x63ipurse/read_record.proto\x1a\x18\x63ipurse/read_value.proto\x1a\x14\x63ipurse/select.proto\x1a\x1b\x63ipurse/update_binary.proto\x1a\x1b\x63ipurse/update_record.proto\x1a\x17turnstile/passage.proto\x1a\x1ctroika/av3/read_ticket.proto\x1a\x1dtroika/av3/write_ticket.proto\"\xfd\x03\n\rMiscellaneous\x12)\n\x0eset_leds_state\x18\x01 \x01(\x0b\x32\x0f.misc.leds.LedsH\x00\x12\x37\n\x10read_device_info\x18\x02 \x01(\x0b\x32\x1b.misc.device.ReadDeviceInfoH\x00\x12,\n\rreboot_device\x18\x03 \x01(\x0b\x32\x13.misc.reboot.RebootH\x00\x12\x39\n\x11get_device_status\x18\x04 \x01(\x0b\x32\x1c.misc.device.GetDeviceStatusH\x00\x12,\n\nmake_sound\x18\x06 \x01(\x0b\x32\x16.misc.buzzer.MakeSoundH\x00\x12>\n\x14get_device_statistic\x18\x07 \x01(\x0b\x32\x1e.misc.stats.GetDeviceStatisticH\x00\x12&\n\x08get_echo\x18\x08 \x01(\x0b\x32\x12.misc.echo.GetEchoH\x00\x12\x38\n\x0f\x63hange_baudrate\x18\t \x01(\x0b\x32\x1d.misc.baudrate.ChangeBaudrateH\x00\x12\x43\n\x13\x63hange_lan_settings\x18\n \x01(\x0b\x32$.misc.lan_settings.ChangeLanSettingsH\x00\x42\n\n\x08misc_cmd\"\xb5\x03\n\x11\x43ontactlessLevel1\x12\x38\n\x0epoll_for_token\x18\x01 \x01(\x0b\x32\x1e.contactless.poll.PollForTokenH\x00\x12:\n\x0b\x65mv_removal\x18\x02 \x01(\x0b\x32#.contactless.emv_removal.EmvRemovalH\x00\x12\x43\n\rtsv_bit_array\x18\x03 \x01(\x0b\x32*.contactless.transceive.TransceiveBitArrayH\x00\x12=\n\x12iso14443_4_command\x18\x04 \x01(\x0b\x32\x1f.contactless.iso14443_4.CommandH\x00\x12>\n\x0fpower_off_field\x18\x05 \x01(\x0b\x32#.contactless.rf_field.PowerOffFieldH\x00\x12L\n\x0frequest_for_ats\x18\x06 \x01(\x0b\x32\x31.contactless.iso14443_4a.RequestForAnswerToSelectH\x00\x42\x18\n\x16\x63ontactless_level1_cmd\"y\n\x11\x43ontactlessLevel2\x12J\n\x13perform_transaction\x18\x01 \x01(\x0b\x32+.contactless.transaction.PerformTransactionH\x00\x42\x18\n\x16\x63ontactless_level2_cmd\"\xd3\x12\n\x06Mifare\x12\x46\n\x1dmfr_classic_auth_on_clear_key\x18\x01 \x01(\x0b\x32\x1d.mifare.classic.auth.ClearKeyH\x00\x12\x42\n\x1bmfr_classic_auth_on_sam_key\x18\x02 \x01(\x0b\x32\x1b.mifare.classic.auth.SamKeyH\x00\x12\x42\n\x17mfr_classic_read_blocks\x18\x03 \x01(\x0b\x32\x1f.mifare.classic.read.ReadBlocksH\x00\x12\x45\n\x18mfr_classic_write_blocks\x18\x04 \x01(\x0b\x32!.mifare.classic.write.WriteBlocksH\x00\x12H\n\x1amfr_classic_bulk_operation\x18\x05 \x01(\x0b\x32\".mifare.classic.bulk.BulkOperationH\x00\x12I\n\x17mfr_classic_get_counter\x18\x06 \x01(\x0b\x32&.mifare.classic.counter.get.GetCounterH\x00\x12I\n\x17mfr_classic_set_counter\x18\x07 \x01(\x0b\x32&.mifare.classic.counter.set.SetCounterH\x00\x12R\n\x1amfr_classic_modify_counter\x18\x08 \x01(\x0b\x32,.mifare.classic.counter.modify.ModifyCounterH\x00\x12L\n\x18mfr_classic_copy_counter\x18\t \x01(\x0b\x32(.mifare.classic.counter.copy.CopyCounterH\x00\x12R\n\x1amfr_classic_commit_counter\x18\n \x01(\x0b\x32,.mifare.classic.counter.commit.CommitCounterH\x00\x12@\n\x1amfr_plus_auth_on_clear_key\x18\x10 \x01(\x0b\x32\x1a.mifare.plus.auth.ClearKeyH\x00\x12<\n\x14mfr_plus_read_blocks\x18\x11 \x01(\x0b\x32\x1c.mifare.plus.read.ReadBlocksH\x00\x12?\n\x15mfr_plus_write_blocks\x18\x12 \x01(\x0b\x32\x1e.mifare.plus.write.WriteBlocksH\x00\x12\x42\n\x17mfr_plus_bulk_operation\x18\x13 \x01(\x0b\x32\x1f.mifare.plus.bulk.BulkOperationH\x00\x12\x43\n\x14mfr_plus_get_counter\x18\x14 \x01(\x0b\x32#.mifare.plus.counter.get.GetCounterH\x00\x12\x43\n\x14mfr_plus_set_counter\x18\x15 \x01(\x0b\x32#.mifare.plus.counter.set.SetCounterH\x00\x12L\n\x17mfr_plus_modify_counter\x18\x16 \x01(\x0b\x32).mifare.plus.counter.modify.ModifyCounterH\x00\x12\x46\n\x15mfr_plus_copy_counter\x18\x17 \x01(\x0b\x32%.mifare.plus.counter.copy.CopyCounterH\x00\x12L\n\x17mfr_plus_commit_counter\x18\x18 \x01(\x0b\x32).mifare.plus.counter.commit.CommitCounterH\x00\x12<\n\x18mfr_plus_auth_on_sam_key\x18\x19 \x01(\x0b\x32\x18.mifare.plus.auth.SamKeyH\x00\x12G\n\x15\x61v2_authenticate_host\x18\x1e \x01(\x0b\x32&.mifare.av2.host_auth.AuthenticateHostH\x00\x12I\n\x13\x61v2_change_keyentry\x18\x1f \x01(\x0b\x32*.mifare.av2.change_keyentry.ChangeKeyEntryH\x00\x12/\n\nav2_unlock\x18  \x01(\x0b\x32\x19.mifare.av2.unlock.UnlockH\x00\x12>\n\x11mfr_ul_read_pages\x18$ \x01(\x0b\x32!.mifare.ultralight.read.ReadPagesH\x00\x12\x41\n\x12mfr_ul_write_pages\x18% \x01(\x0b\x32#.mifare.ultralight.write.WritePagesH\x00\x12\x43\n\x12mfr_ul_get_version\x18& \x01(\x0b\x32%.mifare.ultralight.version.GetVersionH\x00\x12G\n\x12mfr_ul_get_counter\x18\' \x01(\x0b\x32).mifare.ultralight.counter.get.GetCounterH\x00\x12Y\n\x18mfr_ul_increment_counter\x18( \x01(\x0b\x32\x35.mifare.ultralight.counter.increment.IncrementCounterH\x00\x12\x46\n\x15mfr_ul_bulk_operation\x18) \x01(\x0b\x32%.mifare.ultralight.bulk.BulkOperationH\x00\x12\x44\n\x18mfr_ul_auth_on_clear_key\x18* \x01(\x0b\x32 .mifare.ultralight.auth.ClearKeyH\x00\x12@\n\x16mfr_ul_auth_on_sam_key\x18+ \x01(\x0b\x32\x1e.mifare.ultralight.auth.SamKeyH\x00\x12O\n\x1amfr_ul_auth_clear_password\x18, \x01(\x0b\x32).mifare.ultralight.password.ClearPasswordH\x00\x12K\n\x18mfr_ul_auth_sam_password\x18- \x01(\x0b\x32\'.mifare.ultralight.password.SamPasswordH\x00\x42\x0c\n\nmifare_cmd\"O\n\x06PinPad\x12\x37\n\nonline_pin\x18\x01 \x01(\x0b\x32!.pinpad.online_pin.EnterOnlinePinH\x00\x42\x0c\n\npinpad_cmd\"\xd2\x01\n\rContactLevel1\x12\x36\n\rpower_on_card\x18\x01 \x01(\x0b\x32\x1d.contact.power_on.PowerOnCardH\x00\x12\x39\n\x0epower_off_card\x18\x02 \x01(\x0b\x32\x1f.contact.power_off.PowerOffCardH\x00\x12\x38\n\rtransmit_apdu\x18\x03 \x01(\x0b\x32\x1f.contact.iso7816_4.TransmitApduH\x00\x42\x14\n\x12\x63ontact_level1_cmd\"u\n\rContactLevel2\x12N\n\x1bperform_contact_transaction\x18\x01 \x01(\x0b\x32\'.contact.transaction.PerformTransactionH\x00\x42\x14\n\x12\x63ontact_level2_cmd\"\x9b\x05\n\x07Service\x12\x34\n\rget_challenge\x18\x01 \x01(\x0b\x32\x1b.srv.challenge.GetChallengeH\x00\x12\x37\n\x13\x61\x63tivate_protection\x18\x02 \x01(\x0b\x32\x18.srv.protection.ActivateH\x00\x12;\n\x15\x64\x65\x61\x63tivate_protection\x18\x03 \x01(\x0b\x32\x1a.srv.protection.DeactivateH\x00\x12\x36\n\x0eprepare_update\x18\x04 \x01(\x0b\x32\x1c.srv.firmware_update.PrepareH\x00\x12\x38\n\x0cupdate_block\x18\x05 \x01(\x0b\x32 .srv.firmware_update.UpdateBlockH\x00\x12\x32\n\x0c\x61pply_update\x18\x06 \x01(\x0b\x32\x1a.srv.firmware_update.ApplyH\x00\x12\x38\n\x0frollback_update\x18\x07 \x01(\x0b\x32\x1d.srv.firmware_update.RollbackH\x00\x12\x37\n\x0eget_diagnostic\x18\x08 \x01(\x0b\x32\x1d.srv.diagnostic.GetDiagnosticH\x00\x12\x38\n\x12prepare_for_config\x18\t \x01(\x0b\x32\x1a.srv.upload_config.PrepareH\x00\x12@\n\x16upload_block_of_config\x18\n \x01(\x0b\x32\x1e.srv.upload_config.UploadBlockH\x00\x12\x44\n\x13\x63heck_configuration\x18\x0b \x01(\x0b\x32%.srv.upload_config.CheckConfigurationH\x00\x42\t\n\x07srv_cmd\"\xa1\x01\n\x07StmCard\x12\x41\n\x16stm_sri512_read_blocks\x18\x01 \x01(\x0b\x32\x1f.stmcard.sri512.read.ReadBlocksH\x00\x12\x44\n\x17stm_sri512_write_blocks\x18\x02 \x01(\x0b\x32!.stmcard.sri512.write.WriteBlocksH\x00\x42\r\n\x0bstmcard_cmd\"\xe7\x01\n\x08NtagCard\x12\x33\n\x10ntag_select_file\x18\x01 \x01(\x0b\x32\x17.ntag.select.SelectFileH\x00\x12\x35\n\x16ntag_auth_on_clear_key\x18\x02 \x01(\x0b\x32\x13.ntag.auth.ClearKeyH\x00\x12-\n\x0entag_read_file\x18\x03 \x01(\x0b\x32\x13.ntag.read.ReadFileH\x00\x12\x30\n\x0fntag_write_file\x18\x04 \x01(\x0b\x32\x15.ntag.write.WriteFileH\x00\x42\x0e\n\x0cntagcard_cmd\"\x8d\x02\n\x03Gui\x12-\n\x0bshow_screen\x18\x01 \x01(\x0b\x32\x16.gui.screen.ShowScreenH\x00\x12\x35\n\x0cinput_dialog\x18\x02 \x01(\x0b\x32\x1d.gui.input_dialog.InputDialogH\x00\x12\x32\n\x0bmenu_dialog\x18\x03 \x01(\x0b\x32\x1b.gui.menu_dialog.MenuDialogH\x00\x12\x32\n\x0b\x64raw_bitmap\x18\x04 \x01(\x0b\x32\x1b.gui.draw_bitmap.DrawBitmapH\x00\x12-\n\tslideshow\x18\x05 \x01(\x0b\x32\x18.gui.slideshow.SlideshowH\x00\x42\t\n\x07gui_cmd\"_\n\x0bTouchscreen\x12=\n\x10poll_touchscreen\x18\x01 \x01(\x0b\x32!.touchscreen.poll.PollTouchscreenH\x00\x42\x11\n\x0ftouchscreen_cmd\"N\n\x07\x43omplex\x12\x34\n\x0epoll_for_event\x18\x01 \x01(\x0b\x32\x1a.complex.poll.PollForEventH\x00\x42\r\n\x0b\x63omplex_cmd\"\x83\x01\n\x06QrCode\x12\x35\n\x0fpoll_for_qrcode\x18\x01 \x01(\x0b\x32\x1a.qrcode.poll.PollForQrCodeH\x00\x12\x34\n\x0csend_command\x18\x02 \x01(\x0b\x32\x1c.qrcode.exchange.SendCommandH\x00\x42\x0c\n\nqrcode_cmd\"\xe5\x04\n\x07\x43ipurse\x12\x34\n\rauthorize_sam\x18\x01 \x01(\x0b\x32\x1b.cipurse.sam.AuthorizeHwSamH\x00\x12\x31\n\x0bselect_file\x18\x02 \x01(\x0b\x32\x1a.cipurse.select.SelectFileH\x00\x12H\n\x18\x65stablish_secure_channel\x18\x03 \x01(\x0b\x32$.cipurse.auth.EstablishSecureChannelH\x00\x12\x36\n\x0bread_binary\x18\x04 \x01(\x0b\x32\x1f.cipurse.read_binary.ReadBinaryH\x00\x12<\n\rupdate_binary\x18\x05 \x01(\x0b\x32#.cipurse.update_binary.UpdateBinaryH\x00\x12\x36\n\x0bread_record\x18\x06 \x01(\x0b\x32\x1f.cipurse.read_record.ReadRecordH\x00\x12<\n\rupdate_record\x18\x07 \x01(\x0b\x32#.cipurse.update_record.UpdateRecordH\x00\x12<\n\rappend_record\x18\x08 \x01(\x0b\x32#.cipurse.append_record.AppendRecordH\x00\x12\x33\n\nread_value\x18\t \x01(\x0b\x32\x1d.cipurse.read_value.ReadValueH\x00\x12\x39\n\x0cmodify_value\x18\n \x01(\x0b\x32!.cipurse.modify_value.ModifyValueH\x00\x42\r\n\x0b\x63ipurse_cmd\"W\n\tTurnstile\x12\x39\n\x0e\x61llow_one_pass\x18\x01 \x01(\x0b\x32\x1f.turnstile.passage.AllowOnePassH\x00\x42\x0f\n\rturnstile_cmd\"\xfe\x01\n\x0eMifareExtended\x12K\n\x18mfr_classic_read_sectors\x18\x01 \x01(\x0b\x32\'.mifare.classic.sector.read.ReadSectorsH\x00\x12N\n\x19mfr_classic_write_sectors\x18\x02 \x01(\x0b\x32).mifare.classic.sector.write.WriteSectorsH\x00\x12\x41\n\x0fmfr_get_version\x18\x03 \x01(\x0b\x32&.mifare.generic.get_version.GetVersionH\x00\x42\x0c\n\nmifare_cmd\"\xa9\x01\n\nTroikaCard\x12\x44\n\x16troika_av3_read_ticket\x18\x01 \x01(\x0b\x32\".troika.av3.read_ticket.ReadTicketH\x00\x12G\n\x17troika_av3_write_ticket\x18\x02 \x01(\x0b\x32$.troika.av3.write_ticket.WriteTicketH\x00\x42\x0c\n\ntroika_cmd')
  ,
  dependencies=[misc_dot_leds__pb2.DESCRIPTOR,misc_dot_device__pb2.DESCRIPTOR,misc_dot_reboot__pb2.DESCRIPTOR,misc_dot_buzzer__pb2.DESCRIPTOR,misc_dot_stats__pb2.DESCRIPTOR,misc_dot_echo__pb2.DESCRIPTOR,misc_dot_baudrate__pb2.DESCRIPTOR,misc_dot_lan__settings__pb2.DESCRIPTOR,srv_dot_challenge__pb2.DESCRIPTOR,srv_dot_protection__pb2.DESCRIPTOR,srv_dot_firmware__update__pb2.DESCRIPTOR,srv_dot_diagnostic__pb2.DESCRIPTOR,srv_dot_upload__config__pb2.DESCRIPTOR,contactless_dot_poll__for__token__pb2.DESCRIPTOR,contactless_dot_transaction__pb2.DESCRIPTOR,contactless_dot_emv__removal__pb2.DESCRIPTOR,contactless_dot_transceive__pb2.DESCRIPTOR,contactless_dot_iso14443__4__pb2.DESCRIPTOR,contactless_dot_iso14443__4a__pb2.DESCRIPTOR,contactless_dot_rf__field__pb2.DESCRIPTOR,mifare_dot_classic_dot_auth__pb2.DESCRIPTOR,mifare_dot_classic_dot_read__pb2.DESCRIPTOR,mifare_dot_classic_dot_write__pb2.DESCRIPTOR,mifare_dot_classic_dot_bulk__pb2.DESCRIPTOR,mifare_dot_classic_dot_counter_dot_commit__pb2.DESCRIPTOR,mifare_dot_classic_dot_counter_dot_copy__pb2.DESCRIPTOR,mifare_dot_classic_dot_counter_dot_get__pb2.DESCRIPTOR,mifare_dot_classic_dot_counter_dot_modify__pb2.DESCRIPTOR,mifare_dot_classic_dot_counter_dot_set__pb2.DESCRIPTOR,mifare_dot_classic_dot_sector_dot_read__sector__pb2.DESCRIPTOR,mifare_dot_classic_dot_sector_dot_write__sector__pb2.DESCRIPTOR,mifare_dot_plus_dot_auth__pb2.DESCRIPTOR,mifare_dot_plus_dot_read__pb2.DESCRIPTOR,mifare_dot_plus_dot_write__pb2.DESCRIPTOR,mifare_dot_plus_dot_bulk__pb2.DESCRIPTOR,mifare_dot_plus_dot_counter_dot_commit__pb2.DESCRIPTOR,mifare_dot_plus_dot_counter_dot_copy__pb2.DESCRIPTOR,mifare_dot_plus_dot_counter_dot_get__pb2.DESCRIPTOR,mifare_dot_plus_dot_counter_dot_modify__pb2.DESCRIPTOR,mifare_dot_plus_dot_counter_dot_set__pb2.DESCRIPTOR,mifare_dot_av2_dot_host__auth__pb2.DESCRIPTOR,mifare_dot_av2_dot_change__keyentry__pb2.DESCRIPTOR,mifare_dot_av2_dot_unlock__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_read__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_write__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_version__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_bulk__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_auth__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_password__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_counter_dot_get__pb2.DESCRIPTOR,mifare_dot_ultralight_dot_counter_dot_increment__pb2.DESCRIPTOR,mifare_dot_generic_dot_get__version__pb2.DESCRIPTOR,pinpad_dot_online__pin__pb2.DESCRIPTOR,contact_dot_power__on__pb2.DESCRIPTOR,contact_dot_power__off__pb2.DESCRIPTOR,contact_dot_iso7816__4__pb2.DESCRIPTOR,contact_dot_transaction__pb2.DESCRIPTOR,sri512_dot_read__pb2.DESCRIPTOR,sri512_dot_write__pb2.DESCRIPTOR,ntag_dot_select__pb2.DESCRIPTOR,ntag_dot_auth__pb2.DESCRIPTOR,ntag_dot_read__pb2.DESCRIPTOR,ntag_dot_write__pb2.DESCRIPTOR,gui_dot_screen__pb2.DESCRIPTOR,gui_dot_input__dialog__pb2.DESCRIPTOR,gui_dot_menu__dialog__pb2.DESCRIPTOR,gui_dot_draw__bitmap__pb2.DESCRIPTOR,gui_dot_slideshow__pb2.DESCRIPTOR,touchscreen_dot_poll__touchscreen__pb2.DESCRIPTOR,complex_dot_poll__for__event__pb2.DESCRIPTOR,qrcode_dot_poll__for__qrcode__pb2.DESCRIPTOR,qrcode_dot_exchange__pb2.DESCRIPTOR,cipurse_dot_append__record__pb2.DESCRIPTOR,cipurse_dot_auth__pb2.DESCRIPTOR,cipurse_dot_authorize__sam__pb2.DESCRIPTOR,cipurse_dot_modify__value__pb2.DESCRIPTOR,cipurse_dot_read__binary__pb2.DESCRIPTOR,cipurse_dot_read__record__pb2.DESCRIPTOR,cipurse_dot_read__value__pb2.DESCRIPTOR,cipurse_dot_select__pb2.DESCRIPTOR,cipurse_dot_update__binary__pb2.DESCRIPTOR,cipurse_dot_update__record__pb2.DESCRIPTOR,turnstile_dot_passage__pb2.DESCRIPTOR,troika_dot_av3_dot_read__ticket__pb2.DESCRIPTOR,troika_dot_av3_dot_write__ticket__pb2.DESCRIPTOR,])




_MISCELLANEOUS = _descriptor.Descriptor(
  name='Miscellaneous',
  full_name='Miscellaneous',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set_leds_state', full_name='Miscellaneous.set_leds_state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='read_device_info', full_name='Miscellaneous.read_device_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reboot_device', full_name='Miscellaneous.reboot_device', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_device_status', full_name='Miscellaneous.get_device_status', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='make_sound', full_name='Miscellaneous.make_sound', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_device_statistic', full_name='Miscellaneous.get_device_statistic', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_echo', full_name='Miscellaneous.get_echo', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='change_baudrate', full_name='Miscellaneous.change_baudrate', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='change_lan_settings', full_name='Miscellaneous.change_lan_settings', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='misc_cmd', full_name='Miscellaneous.misc_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2339,
  serialized_end=2848,
)


_CONTACTLESSLEVEL1 = _descriptor.Descriptor(
  name='ContactlessLevel1',
  full_name='ContactlessLevel1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='poll_for_token', full_name='ContactlessLevel1.poll_for_token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='emv_removal', full_name='ContactlessLevel1.emv_removal', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tsv_bit_array', full_name='ContactlessLevel1.tsv_bit_array', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='iso14443_4_command', full_name='ContactlessLevel1.iso14443_4_command', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='power_off_field', full_name='ContactlessLevel1.power_off_field', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_for_ats', full_name='ContactlessLevel1.request_for_ats', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='contactless_level1_cmd', full_name='ContactlessLevel1.contactless_level1_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2851,
  serialized_end=3288,
)


_CONTACTLESSLEVEL2 = _descriptor.Descriptor(
  name='ContactlessLevel2',
  full_name='ContactlessLevel2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='perform_transaction', full_name='ContactlessLevel2.perform_transaction', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='contactless_level2_cmd', full_name='ContactlessLevel2.contactless_level2_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3290,
  serialized_end=3411,
)


_MIFARE = _descriptor.Descriptor(
  name='Mifare',
  full_name='Mifare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mfr_classic_auth_on_clear_key', full_name='Mifare.mfr_classic_auth_on_clear_key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_auth_on_sam_key', full_name='Mifare.mfr_classic_auth_on_sam_key', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_read_blocks', full_name='Mifare.mfr_classic_read_blocks', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_write_blocks', full_name='Mifare.mfr_classic_write_blocks', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_bulk_operation', full_name='Mifare.mfr_classic_bulk_operation', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_get_counter', full_name='Mifare.mfr_classic_get_counter', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_set_counter', full_name='Mifare.mfr_classic_set_counter', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_modify_counter', full_name='Mifare.mfr_classic_modify_counter', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_copy_counter', full_name='Mifare.mfr_classic_copy_counter', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_commit_counter', full_name='Mifare.mfr_classic_commit_counter', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_auth_on_clear_key', full_name='Mifare.mfr_plus_auth_on_clear_key', index=10,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_read_blocks', full_name='Mifare.mfr_plus_read_blocks', index=11,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_write_blocks', full_name='Mifare.mfr_plus_write_blocks', index=12,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_bulk_operation', full_name='Mifare.mfr_plus_bulk_operation', index=13,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_get_counter', full_name='Mifare.mfr_plus_get_counter', index=14,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_set_counter', full_name='Mifare.mfr_plus_set_counter', index=15,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_modify_counter', full_name='Mifare.mfr_plus_modify_counter', index=16,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_copy_counter', full_name='Mifare.mfr_plus_copy_counter', index=17,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_commit_counter', full_name='Mifare.mfr_plus_commit_counter', index=18,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_plus_auth_on_sam_key', full_name='Mifare.mfr_plus_auth_on_sam_key', index=19,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='av2_authenticate_host', full_name='Mifare.av2_authenticate_host', index=20,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='av2_change_keyentry', full_name='Mifare.av2_change_keyentry', index=21,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='av2_unlock', full_name='Mifare.av2_unlock', index=22,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_read_pages', full_name='Mifare.mfr_ul_read_pages', index=23,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_write_pages', full_name='Mifare.mfr_ul_write_pages', index=24,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_get_version', full_name='Mifare.mfr_ul_get_version', index=25,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_get_counter', full_name='Mifare.mfr_ul_get_counter', index=26,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_increment_counter', full_name='Mifare.mfr_ul_increment_counter', index=27,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_bulk_operation', full_name='Mifare.mfr_ul_bulk_operation', index=28,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_auth_on_clear_key', full_name='Mifare.mfr_ul_auth_on_clear_key', index=29,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_auth_on_sam_key', full_name='Mifare.mfr_ul_auth_on_sam_key', index=30,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_auth_clear_password', full_name='Mifare.mfr_ul_auth_clear_password', index=31,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_ul_auth_sam_password', full_name='Mifare.mfr_ul_auth_sam_password', index=32,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='mifare_cmd', full_name='Mifare.mifare_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3414,
  serialized_end=5801,
)


_PINPAD = _descriptor.Descriptor(
  name='PinPad',
  full_name='PinPad',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='online_pin', full_name='PinPad.online_pin', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='pinpad_cmd', full_name='PinPad.pinpad_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5803,
  serialized_end=5882,
)


_CONTACTLEVEL1 = _descriptor.Descriptor(
  name='ContactLevel1',
  full_name='ContactLevel1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='power_on_card', full_name='ContactLevel1.power_on_card', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='power_off_card', full_name='ContactLevel1.power_off_card', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transmit_apdu', full_name='ContactLevel1.transmit_apdu', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='contact_level1_cmd', full_name='ContactLevel1.contact_level1_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5885,
  serialized_end=6095,
)


_CONTACTLEVEL2 = _descriptor.Descriptor(
  name='ContactLevel2',
  full_name='ContactLevel2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='perform_contact_transaction', full_name='ContactLevel2.perform_contact_transaction', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='contact_level2_cmd', full_name='ContactLevel2.contact_level2_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6097,
  serialized_end=6214,
)


_SERVICE = _descriptor.Descriptor(
  name='Service',
  full_name='Service',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='get_challenge', full_name='Service.get_challenge', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='activate_protection', full_name='Service.activate_protection', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deactivate_protection', full_name='Service.deactivate_protection', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prepare_update', full_name='Service.prepare_update', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update_block', full_name='Service.update_block', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apply_update', full_name='Service.apply_update', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rollback_update', full_name='Service.rollback_update', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='get_diagnostic', full_name='Service.get_diagnostic', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prepare_for_config', full_name='Service.prepare_for_config', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='upload_block_of_config', full_name='Service.upload_block_of_config', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='check_configuration', full_name='Service.check_configuration', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='srv_cmd', full_name='Service.srv_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6217,
  serialized_end=6884,
)


_STMCARD = _descriptor.Descriptor(
  name='StmCard',
  full_name='StmCard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stm_sri512_read_blocks', full_name='StmCard.stm_sri512_read_blocks', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stm_sri512_write_blocks', full_name='StmCard.stm_sri512_write_blocks', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='stmcard_cmd', full_name='StmCard.stmcard_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6887,
  serialized_end=7048,
)


_NTAGCARD = _descriptor.Descriptor(
  name='NtagCard',
  full_name='NtagCard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ntag_select_file', full_name='NtagCard.ntag_select_file', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ntag_auth_on_clear_key', full_name='NtagCard.ntag_auth_on_clear_key', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ntag_read_file', full_name='NtagCard.ntag_read_file', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ntag_write_file', full_name='NtagCard.ntag_write_file', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ntagcard_cmd', full_name='NtagCard.ntagcard_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7051,
  serialized_end=7282,
)


_GUI = _descriptor.Descriptor(
  name='Gui',
  full_name='Gui',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='show_screen', full_name='Gui.show_screen', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_dialog', full_name='Gui.input_dialog', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='menu_dialog', full_name='Gui.menu_dialog', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='draw_bitmap', full_name='Gui.draw_bitmap', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='slideshow', full_name='Gui.slideshow', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='gui_cmd', full_name='Gui.gui_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7285,
  serialized_end=7554,
)


_TOUCHSCREEN = _descriptor.Descriptor(
  name='Touchscreen',
  full_name='Touchscreen',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='poll_touchscreen', full_name='Touchscreen.poll_touchscreen', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='touchscreen_cmd', full_name='Touchscreen.touchscreen_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7556,
  serialized_end=7651,
)


_COMPLEX = _descriptor.Descriptor(
  name='Complex',
  full_name='Complex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='poll_for_event', full_name='Complex.poll_for_event', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='complex_cmd', full_name='Complex.complex_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7653,
  serialized_end=7731,
)


_QRCODE = _descriptor.Descriptor(
  name='QrCode',
  full_name='QrCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='poll_for_qrcode', full_name='QrCode.poll_for_qrcode', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='send_command', full_name='QrCode.send_command', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='qrcode_cmd', full_name='QrCode.qrcode_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7734,
  serialized_end=7865,
)


_CIPURSE = _descriptor.Descriptor(
  name='Cipurse',
  full_name='Cipurse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='authorize_sam', full_name='Cipurse.authorize_sam', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='select_file', full_name='Cipurse.select_file', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='establish_secure_channel', full_name='Cipurse.establish_secure_channel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='read_binary', full_name='Cipurse.read_binary', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update_binary', full_name='Cipurse.update_binary', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='read_record', full_name='Cipurse.read_record', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update_record', full_name='Cipurse.update_record', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='append_record', full_name='Cipurse.append_record', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='read_value', full_name='Cipurse.read_value', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modify_value', full_name='Cipurse.modify_value', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='cipurse_cmd', full_name='Cipurse.cipurse_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7868,
  serialized_end=8481,
)


_TURNSTILE = _descriptor.Descriptor(
  name='Turnstile',
  full_name='Turnstile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='allow_one_pass', full_name='Turnstile.allow_one_pass', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='turnstile_cmd', full_name='Turnstile.turnstile_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8483,
  serialized_end=8570,
)


_MIFAREEXTENDED = _descriptor.Descriptor(
  name='MifareExtended',
  full_name='MifareExtended',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mfr_classic_read_sectors', full_name='MifareExtended.mfr_classic_read_sectors', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_classic_write_sectors', full_name='MifareExtended.mfr_classic_write_sectors', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mfr_get_version', full_name='MifareExtended.mfr_get_version', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='mifare_cmd', full_name='MifareExtended.mifare_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8573,
  serialized_end=8827,
)


_TROIKACARD = _descriptor.Descriptor(
  name='TroikaCard',
  full_name='TroikaCard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='troika_av3_read_ticket', full_name='TroikaCard.troika_av3_read_ticket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='troika_av3_write_ticket', full_name='TroikaCard.troika_av3_write_ticket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='troika_cmd', full_name='TroikaCard.troika_cmd',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8830,
  serialized_end=8999,
)

_MISCELLANEOUS.fields_by_name['set_leds_state'].message_type = misc_dot_leds__pb2._LEDS
_MISCELLANEOUS.fields_by_name['read_device_info'].message_type = misc_dot_device__pb2._READDEVICEINFO
_MISCELLANEOUS.fields_by_name['reboot_device'].message_type = misc_dot_reboot__pb2._REBOOT
_MISCELLANEOUS.fields_by_name['get_device_status'].message_type = misc_dot_device__pb2._GETDEVICESTATUS
_MISCELLANEOUS.fields_by_name['make_sound'].message_type = misc_dot_buzzer__pb2._MAKESOUND
_MISCELLANEOUS.fields_by_name['get_device_statistic'].message_type = misc_dot_stats__pb2._GETDEVICESTATISTIC
_MISCELLANEOUS.fields_by_name['get_echo'].message_type = misc_dot_echo__pb2._GETECHO
_MISCELLANEOUS.fields_by_name['change_baudrate'].message_type = misc_dot_baudrate__pb2._CHANGEBAUDRATE
_MISCELLANEOUS.fields_by_name['change_lan_settings'].message_type = misc_dot_lan__settings__pb2._CHANGELANSETTINGS
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['set_leds_state'])
_MISCELLANEOUS.fields_by_name['set_leds_state'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['read_device_info'])
_MISCELLANEOUS.fields_by_name['read_device_info'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['reboot_device'])
_MISCELLANEOUS.fields_by_name['reboot_device'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['get_device_status'])
_MISCELLANEOUS.fields_by_name['get_device_status'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['make_sound'])
_MISCELLANEOUS.fields_by_name['make_sound'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['get_device_statistic'])
_MISCELLANEOUS.fields_by_name['get_device_statistic'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['get_echo'])
_MISCELLANEOUS.fields_by_name['get_echo'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['change_baudrate'])
_MISCELLANEOUS.fields_by_name['change_baudrate'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_MISCELLANEOUS.oneofs_by_name['misc_cmd'].fields.append(
  _MISCELLANEOUS.fields_by_name['change_lan_settings'])
_MISCELLANEOUS.fields_by_name['change_lan_settings'].containing_oneof = _MISCELLANEOUS.oneofs_by_name['misc_cmd']
_CONTACTLESSLEVEL1.fields_by_name['poll_for_token'].message_type = contactless_dot_poll__for__token__pb2._POLLFORTOKEN
_CONTACTLESSLEVEL1.fields_by_name['emv_removal'].message_type = contactless_dot_emv__removal__pb2._EMVREMOVAL
_CONTACTLESSLEVEL1.fields_by_name['tsv_bit_array'].message_type = contactless_dot_transceive__pb2._TRANSCEIVEBITARRAY
_CONTACTLESSLEVEL1.fields_by_name['iso14443_4_command'].message_type = contactless_dot_iso14443__4__pb2._COMMAND
_CONTACTLESSLEVEL1.fields_by_name['power_off_field'].message_type = contactless_dot_rf__field__pb2._POWEROFFFIELD
_CONTACTLESSLEVEL1.fields_by_name['request_for_ats'].message_type = contactless_dot_iso14443__4a__pb2._REQUESTFORANSWERTOSELECT
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['poll_for_token'])
_CONTACTLESSLEVEL1.fields_by_name['poll_for_token'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['emv_removal'])
_CONTACTLESSLEVEL1.fields_by_name['emv_removal'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['tsv_bit_array'])
_CONTACTLESSLEVEL1.fields_by_name['tsv_bit_array'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['iso14443_4_command'])
_CONTACTLESSLEVEL1.fields_by_name['iso14443_4_command'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['power_off_field'])
_CONTACTLESSLEVEL1.fields_by_name['power_off_field'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd'].fields.append(
  _CONTACTLESSLEVEL1.fields_by_name['request_for_ats'])
_CONTACTLESSLEVEL1.fields_by_name['request_for_ats'].containing_oneof = _CONTACTLESSLEVEL1.oneofs_by_name['contactless_level1_cmd']
_CONTACTLESSLEVEL2.fields_by_name['perform_transaction'].message_type = contactless_dot_transaction__pb2._PERFORMTRANSACTION
_CONTACTLESSLEVEL2.oneofs_by_name['contactless_level2_cmd'].fields.append(
  _CONTACTLESSLEVEL2.fields_by_name['perform_transaction'])
_CONTACTLESSLEVEL2.fields_by_name['perform_transaction'].containing_oneof = _CONTACTLESSLEVEL2.oneofs_by_name['contactless_level2_cmd']
_MIFARE.fields_by_name['mfr_classic_auth_on_clear_key'].message_type = mifare_dot_classic_dot_auth__pb2._CLEARKEY
_MIFARE.fields_by_name['mfr_classic_auth_on_sam_key'].message_type = mifare_dot_classic_dot_auth__pb2._SAMKEY
_MIFARE.fields_by_name['mfr_classic_read_blocks'].message_type = mifare_dot_classic_dot_read__pb2._READBLOCKS
_MIFARE.fields_by_name['mfr_classic_write_blocks'].message_type = mifare_dot_classic_dot_write__pb2._WRITEBLOCKS
_MIFARE.fields_by_name['mfr_classic_bulk_operation'].message_type = mifare_dot_classic_dot_bulk__pb2._BULKOPERATION
_MIFARE.fields_by_name['mfr_classic_get_counter'].message_type = mifare_dot_classic_dot_counter_dot_get__pb2._GETCOUNTER
_MIFARE.fields_by_name['mfr_classic_set_counter'].message_type = mifare_dot_classic_dot_counter_dot_set__pb2._SETCOUNTER
_MIFARE.fields_by_name['mfr_classic_modify_counter'].message_type = mifare_dot_classic_dot_counter_dot_modify__pb2._MODIFYCOUNTER
_MIFARE.fields_by_name['mfr_classic_copy_counter'].message_type = mifare_dot_classic_dot_counter_dot_copy__pb2._COPYCOUNTER
_MIFARE.fields_by_name['mfr_classic_commit_counter'].message_type = mifare_dot_classic_dot_counter_dot_commit__pb2._COMMITCOUNTER
_MIFARE.fields_by_name['mfr_plus_auth_on_clear_key'].message_type = mifare_dot_plus_dot_auth__pb2._CLEARKEY
_MIFARE.fields_by_name['mfr_plus_read_blocks'].message_type = mifare_dot_plus_dot_read__pb2._READBLOCKS
_MIFARE.fields_by_name['mfr_plus_write_blocks'].message_type = mifare_dot_plus_dot_write__pb2._WRITEBLOCKS
_MIFARE.fields_by_name['mfr_plus_bulk_operation'].message_type = mifare_dot_plus_dot_bulk__pb2._BULKOPERATION
_MIFARE.fields_by_name['mfr_plus_get_counter'].message_type = mifare_dot_plus_dot_counter_dot_get__pb2._GETCOUNTER
_MIFARE.fields_by_name['mfr_plus_set_counter'].message_type = mifare_dot_plus_dot_counter_dot_set__pb2._SETCOUNTER
_MIFARE.fields_by_name['mfr_plus_modify_counter'].message_type = mifare_dot_plus_dot_counter_dot_modify__pb2._MODIFYCOUNTER
_MIFARE.fields_by_name['mfr_plus_copy_counter'].message_type = mifare_dot_plus_dot_counter_dot_copy__pb2._COPYCOUNTER
_MIFARE.fields_by_name['mfr_plus_commit_counter'].message_type = mifare_dot_plus_dot_counter_dot_commit__pb2._COMMITCOUNTER
_MIFARE.fields_by_name['mfr_plus_auth_on_sam_key'].message_type = mifare_dot_plus_dot_auth__pb2._SAMKEY
_MIFARE.fields_by_name['av2_authenticate_host'].message_type = mifare_dot_av2_dot_host__auth__pb2._AUTHENTICATEHOST
_MIFARE.fields_by_name['av2_change_keyentry'].message_type = mifare_dot_av2_dot_change__keyentry__pb2._CHANGEKEYENTRY
_MIFARE.fields_by_name['av2_unlock'].message_type = mifare_dot_av2_dot_unlock__pb2._UNLOCK
_MIFARE.fields_by_name['mfr_ul_read_pages'].message_type = mifare_dot_ultralight_dot_read__pb2._READPAGES
_MIFARE.fields_by_name['mfr_ul_write_pages'].message_type = mifare_dot_ultralight_dot_write__pb2._WRITEPAGES
_MIFARE.fields_by_name['mfr_ul_get_version'].message_type = mifare_dot_ultralight_dot_version__pb2._GETVERSION
_MIFARE.fields_by_name['mfr_ul_get_counter'].message_type = mifare_dot_ultralight_dot_counter_dot_get__pb2._GETCOUNTER
_MIFARE.fields_by_name['mfr_ul_increment_counter'].message_type = mifare_dot_ultralight_dot_counter_dot_increment__pb2._INCREMENTCOUNTER
_MIFARE.fields_by_name['mfr_ul_bulk_operation'].message_type = mifare_dot_ultralight_dot_bulk__pb2._BULKOPERATION
_MIFARE.fields_by_name['mfr_ul_auth_on_clear_key'].message_type = mifare_dot_ultralight_dot_auth__pb2._CLEARKEY
_MIFARE.fields_by_name['mfr_ul_auth_on_sam_key'].message_type = mifare_dot_ultralight_dot_auth__pb2._SAMKEY
_MIFARE.fields_by_name['mfr_ul_auth_clear_password'].message_type = mifare_dot_ultralight_dot_password__pb2._CLEARPASSWORD
_MIFARE.fields_by_name['mfr_ul_auth_sam_password'].message_type = mifare_dot_ultralight_dot_password__pb2._SAMPASSWORD
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_auth_on_clear_key'])
_MIFARE.fields_by_name['mfr_classic_auth_on_clear_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_auth_on_sam_key'])
_MIFARE.fields_by_name['mfr_classic_auth_on_sam_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_read_blocks'])
_MIFARE.fields_by_name['mfr_classic_read_blocks'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_write_blocks'])
_MIFARE.fields_by_name['mfr_classic_write_blocks'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_bulk_operation'])
_MIFARE.fields_by_name['mfr_classic_bulk_operation'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_get_counter'])
_MIFARE.fields_by_name['mfr_classic_get_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_set_counter'])
_MIFARE.fields_by_name['mfr_classic_set_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_modify_counter'])
_MIFARE.fields_by_name['mfr_classic_modify_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_copy_counter'])
_MIFARE.fields_by_name['mfr_classic_copy_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_classic_commit_counter'])
_MIFARE.fields_by_name['mfr_classic_commit_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_auth_on_clear_key'])
_MIFARE.fields_by_name['mfr_plus_auth_on_clear_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_read_blocks'])
_MIFARE.fields_by_name['mfr_plus_read_blocks'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_write_blocks'])
_MIFARE.fields_by_name['mfr_plus_write_blocks'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_bulk_operation'])
_MIFARE.fields_by_name['mfr_plus_bulk_operation'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_get_counter'])
_MIFARE.fields_by_name['mfr_plus_get_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_set_counter'])
_MIFARE.fields_by_name['mfr_plus_set_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_modify_counter'])
_MIFARE.fields_by_name['mfr_plus_modify_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_copy_counter'])
_MIFARE.fields_by_name['mfr_plus_copy_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_commit_counter'])
_MIFARE.fields_by_name['mfr_plus_commit_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_plus_auth_on_sam_key'])
_MIFARE.fields_by_name['mfr_plus_auth_on_sam_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['av2_authenticate_host'])
_MIFARE.fields_by_name['av2_authenticate_host'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['av2_change_keyentry'])
_MIFARE.fields_by_name['av2_change_keyentry'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['av2_unlock'])
_MIFARE.fields_by_name['av2_unlock'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_read_pages'])
_MIFARE.fields_by_name['mfr_ul_read_pages'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_write_pages'])
_MIFARE.fields_by_name['mfr_ul_write_pages'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_get_version'])
_MIFARE.fields_by_name['mfr_ul_get_version'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_get_counter'])
_MIFARE.fields_by_name['mfr_ul_get_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_increment_counter'])
_MIFARE.fields_by_name['mfr_ul_increment_counter'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_bulk_operation'])
_MIFARE.fields_by_name['mfr_ul_bulk_operation'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_auth_on_clear_key'])
_MIFARE.fields_by_name['mfr_ul_auth_on_clear_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_auth_on_sam_key'])
_MIFARE.fields_by_name['mfr_ul_auth_on_sam_key'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_auth_clear_password'])
_MIFARE.fields_by_name['mfr_ul_auth_clear_password'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_MIFARE.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFARE.fields_by_name['mfr_ul_auth_sam_password'])
_MIFARE.fields_by_name['mfr_ul_auth_sam_password'].containing_oneof = _MIFARE.oneofs_by_name['mifare_cmd']
_PINPAD.fields_by_name['online_pin'].message_type = pinpad_dot_online__pin__pb2._ENTERONLINEPIN
_PINPAD.oneofs_by_name['pinpad_cmd'].fields.append(
  _PINPAD.fields_by_name['online_pin'])
_PINPAD.fields_by_name['online_pin'].containing_oneof = _PINPAD.oneofs_by_name['pinpad_cmd']
_CONTACTLEVEL1.fields_by_name['power_on_card'].message_type = contact_dot_power__on__pb2._POWERONCARD
_CONTACTLEVEL1.fields_by_name['power_off_card'].message_type = contact_dot_power__off__pb2._POWEROFFCARD
_CONTACTLEVEL1.fields_by_name['transmit_apdu'].message_type = contact_dot_iso7816__4__pb2._TRANSMITAPDU
_CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd'].fields.append(
  _CONTACTLEVEL1.fields_by_name['power_on_card'])
_CONTACTLEVEL1.fields_by_name['power_on_card'].containing_oneof = _CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd']
_CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd'].fields.append(
  _CONTACTLEVEL1.fields_by_name['power_off_card'])
_CONTACTLEVEL1.fields_by_name['power_off_card'].containing_oneof = _CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd']
_CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd'].fields.append(
  _CONTACTLEVEL1.fields_by_name['transmit_apdu'])
_CONTACTLEVEL1.fields_by_name['transmit_apdu'].containing_oneof = _CONTACTLEVEL1.oneofs_by_name['contact_level1_cmd']
_CONTACTLEVEL2.fields_by_name['perform_contact_transaction'].message_type = contact_dot_transaction__pb2._PERFORMTRANSACTION
_CONTACTLEVEL2.oneofs_by_name['contact_level2_cmd'].fields.append(
  _CONTACTLEVEL2.fields_by_name['perform_contact_transaction'])
_CONTACTLEVEL2.fields_by_name['perform_contact_transaction'].containing_oneof = _CONTACTLEVEL2.oneofs_by_name['contact_level2_cmd']
_SERVICE.fields_by_name['get_challenge'].message_type = srv_dot_challenge__pb2._GETCHALLENGE
_SERVICE.fields_by_name['activate_protection'].message_type = srv_dot_protection__pb2._ACTIVATE
_SERVICE.fields_by_name['deactivate_protection'].message_type = srv_dot_protection__pb2._DEACTIVATE
_SERVICE.fields_by_name['prepare_update'].message_type = srv_dot_firmware__update__pb2._PREPARE
_SERVICE.fields_by_name['update_block'].message_type = srv_dot_firmware__update__pb2._UPDATEBLOCK
_SERVICE.fields_by_name['apply_update'].message_type = srv_dot_firmware__update__pb2._APPLY
_SERVICE.fields_by_name['rollback_update'].message_type = srv_dot_firmware__update__pb2._ROLLBACK
_SERVICE.fields_by_name['get_diagnostic'].message_type = srv_dot_diagnostic__pb2._GETDIAGNOSTIC
_SERVICE.fields_by_name['prepare_for_config'].message_type = srv_dot_upload__config__pb2._PREPARE
_SERVICE.fields_by_name['upload_block_of_config'].message_type = srv_dot_upload__config__pb2._UPLOADBLOCK
_SERVICE.fields_by_name['check_configuration'].message_type = srv_dot_upload__config__pb2._CHECKCONFIGURATION
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['get_challenge'])
_SERVICE.fields_by_name['get_challenge'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['activate_protection'])
_SERVICE.fields_by_name['activate_protection'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['deactivate_protection'])
_SERVICE.fields_by_name['deactivate_protection'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['prepare_update'])
_SERVICE.fields_by_name['prepare_update'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['update_block'])
_SERVICE.fields_by_name['update_block'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['apply_update'])
_SERVICE.fields_by_name['apply_update'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['rollback_update'])
_SERVICE.fields_by_name['rollback_update'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['get_diagnostic'])
_SERVICE.fields_by_name['get_diagnostic'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['prepare_for_config'])
_SERVICE.fields_by_name['prepare_for_config'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['upload_block_of_config'])
_SERVICE.fields_by_name['upload_block_of_config'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_SERVICE.oneofs_by_name['srv_cmd'].fields.append(
  _SERVICE.fields_by_name['check_configuration'])
_SERVICE.fields_by_name['check_configuration'].containing_oneof = _SERVICE.oneofs_by_name['srv_cmd']
_STMCARD.fields_by_name['stm_sri512_read_blocks'].message_type = sri512_dot_read__pb2._READBLOCKS
_STMCARD.fields_by_name['stm_sri512_write_blocks'].message_type = sri512_dot_write__pb2._WRITEBLOCKS
_STMCARD.oneofs_by_name['stmcard_cmd'].fields.append(
  _STMCARD.fields_by_name['stm_sri512_read_blocks'])
_STMCARD.fields_by_name['stm_sri512_read_blocks'].containing_oneof = _STMCARD.oneofs_by_name['stmcard_cmd']
_STMCARD.oneofs_by_name['stmcard_cmd'].fields.append(
  _STMCARD.fields_by_name['stm_sri512_write_blocks'])
_STMCARD.fields_by_name['stm_sri512_write_blocks'].containing_oneof = _STMCARD.oneofs_by_name['stmcard_cmd']
_NTAGCARD.fields_by_name['ntag_select_file'].message_type = ntag_dot_select__pb2._SELECTFILE
_NTAGCARD.fields_by_name['ntag_auth_on_clear_key'].message_type = ntag_dot_auth__pb2._CLEARKEY
_NTAGCARD.fields_by_name['ntag_read_file'].message_type = ntag_dot_read__pb2._READFILE
_NTAGCARD.fields_by_name['ntag_write_file'].message_type = ntag_dot_write__pb2._WRITEFILE
_NTAGCARD.oneofs_by_name['ntagcard_cmd'].fields.append(
  _NTAGCARD.fields_by_name['ntag_select_file'])
_NTAGCARD.fields_by_name['ntag_select_file'].containing_oneof = _NTAGCARD.oneofs_by_name['ntagcard_cmd']
_NTAGCARD.oneofs_by_name['ntagcard_cmd'].fields.append(
  _NTAGCARD.fields_by_name['ntag_auth_on_clear_key'])
_NTAGCARD.fields_by_name['ntag_auth_on_clear_key'].containing_oneof = _NTAGCARD.oneofs_by_name['ntagcard_cmd']
_NTAGCARD.oneofs_by_name['ntagcard_cmd'].fields.append(
  _NTAGCARD.fields_by_name['ntag_read_file'])
_NTAGCARD.fields_by_name['ntag_read_file'].containing_oneof = _NTAGCARD.oneofs_by_name['ntagcard_cmd']
_NTAGCARD.oneofs_by_name['ntagcard_cmd'].fields.append(
  _NTAGCARD.fields_by_name['ntag_write_file'])
_NTAGCARD.fields_by_name['ntag_write_file'].containing_oneof = _NTAGCARD.oneofs_by_name['ntagcard_cmd']
_GUI.fields_by_name['show_screen'].message_type = gui_dot_screen__pb2._SHOWSCREEN
_GUI.fields_by_name['input_dialog'].message_type = gui_dot_input__dialog__pb2._INPUTDIALOG
_GUI.fields_by_name['menu_dialog'].message_type = gui_dot_menu__dialog__pb2._MENUDIALOG
_GUI.fields_by_name['draw_bitmap'].message_type = gui_dot_draw__bitmap__pb2._DRAWBITMAP
_GUI.fields_by_name['slideshow'].message_type = gui_dot_slideshow__pb2._SLIDESHOW
_GUI.oneofs_by_name['gui_cmd'].fields.append(
  _GUI.fields_by_name['show_screen'])
_GUI.fields_by_name['show_screen'].containing_oneof = _GUI.oneofs_by_name['gui_cmd']
_GUI.oneofs_by_name['gui_cmd'].fields.append(
  _GUI.fields_by_name['input_dialog'])
_GUI.fields_by_name['input_dialog'].containing_oneof = _GUI.oneofs_by_name['gui_cmd']
_GUI.oneofs_by_name['gui_cmd'].fields.append(
  _GUI.fields_by_name['menu_dialog'])
_GUI.fields_by_name['menu_dialog'].containing_oneof = _GUI.oneofs_by_name['gui_cmd']
_GUI.oneofs_by_name['gui_cmd'].fields.append(
  _GUI.fields_by_name['draw_bitmap'])
_GUI.fields_by_name['draw_bitmap'].containing_oneof = _GUI.oneofs_by_name['gui_cmd']
_GUI.oneofs_by_name['gui_cmd'].fields.append(
  _GUI.fields_by_name['slideshow'])
_GUI.fields_by_name['slideshow'].containing_oneof = _GUI.oneofs_by_name['gui_cmd']
_TOUCHSCREEN.fields_by_name['poll_touchscreen'].message_type = touchscreen_dot_poll__touchscreen__pb2._POLLTOUCHSCREEN
_TOUCHSCREEN.oneofs_by_name['touchscreen_cmd'].fields.append(
  _TOUCHSCREEN.fields_by_name['poll_touchscreen'])
_TOUCHSCREEN.fields_by_name['poll_touchscreen'].containing_oneof = _TOUCHSCREEN.oneofs_by_name['touchscreen_cmd']
_COMPLEX.fields_by_name['poll_for_event'].message_type = complex_dot_poll__for__event__pb2._POLLFOREVENT
_COMPLEX.oneofs_by_name['complex_cmd'].fields.append(
  _COMPLEX.fields_by_name['poll_for_event'])
_COMPLEX.fields_by_name['poll_for_event'].containing_oneof = _COMPLEX.oneofs_by_name['complex_cmd']
_QRCODE.fields_by_name['poll_for_qrcode'].message_type = qrcode_dot_poll__for__qrcode__pb2._POLLFORQRCODE
_QRCODE.fields_by_name['send_command'].message_type = qrcode_dot_exchange__pb2._SENDCOMMAND
_QRCODE.oneofs_by_name['qrcode_cmd'].fields.append(
  _QRCODE.fields_by_name['poll_for_qrcode'])
_QRCODE.fields_by_name['poll_for_qrcode'].containing_oneof = _QRCODE.oneofs_by_name['qrcode_cmd']
_QRCODE.oneofs_by_name['qrcode_cmd'].fields.append(
  _QRCODE.fields_by_name['send_command'])
_QRCODE.fields_by_name['send_command'].containing_oneof = _QRCODE.oneofs_by_name['qrcode_cmd']
_CIPURSE.fields_by_name['authorize_sam'].message_type = cipurse_dot_authorize__sam__pb2._AUTHORIZEHWSAM
_CIPURSE.fields_by_name['select_file'].message_type = cipurse_dot_select__pb2._SELECTFILE
_CIPURSE.fields_by_name['establish_secure_channel'].message_type = cipurse_dot_auth__pb2._ESTABLISHSECURECHANNEL
_CIPURSE.fields_by_name['read_binary'].message_type = cipurse_dot_read__binary__pb2._READBINARY
_CIPURSE.fields_by_name['update_binary'].message_type = cipurse_dot_update__binary__pb2._UPDATEBINARY
_CIPURSE.fields_by_name['read_record'].message_type = cipurse_dot_read__record__pb2._READRECORD
_CIPURSE.fields_by_name['update_record'].message_type = cipurse_dot_update__record__pb2._UPDATERECORD
_CIPURSE.fields_by_name['append_record'].message_type = cipurse_dot_append__record__pb2._APPENDRECORD
_CIPURSE.fields_by_name['read_value'].message_type = cipurse_dot_read__value__pb2._READVALUE
_CIPURSE.fields_by_name['modify_value'].message_type = cipurse_dot_modify__value__pb2._MODIFYVALUE
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['authorize_sam'])
_CIPURSE.fields_by_name['authorize_sam'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['select_file'])
_CIPURSE.fields_by_name['select_file'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['establish_secure_channel'])
_CIPURSE.fields_by_name['establish_secure_channel'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['read_binary'])
_CIPURSE.fields_by_name['read_binary'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['update_binary'])
_CIPURSE.fields_by_name['update_binary'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['read_record'])
_CIPURSE.fields_by_name['read_record'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['update_record'])
_CIPURSE.fields_by_name['update_record'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['append_record'])
_CIPURSE.fields_by_name['append_record'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['read_value'])
_CIPURSE.fields_by_name['read_value'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_CIPURSE.oneofs_by_name['cipurse_cmd'].fields.append(
  _CIPURSE.fields_by_name['modify_value'])
_CIPURSE.fields_by_name['modify_value'].containing_oneof = _CIPURSE.oneofs_by_name['cipurse_cmd']
_TURNSTILE.fields_by_name['allow_one_pass'].message_type = turnstile_dot_passage__pb2._ALLOWONEPASS
_TURNSTILE.oneofs_by_name['turnstile_cmd'].fields.append(
  _TURNSTILE.fields_by_name['allow_one_pass'])
_TURNSTILE.fields_by_name['allow_one_pass'].containing_oneof = _TURNSTILE.oneofs_by_name['turnstile_cmd']
_MIFAREEXTENDED.fields_by_name['mfr_classic_read_sectors'].message_type = mifare_dot_classic_dot_sector_dot_read__sector__pb2._READSECTORS
_MIFAREEXTENDED.fields_by_name['mfr_classic_write_sectors'].message_type = mifare_dot_classic_dot_sector_dot_write__sector__pb2._WRITESECTORS
_MIFAREEXTENDED.fields_by_name['mfr_get_version'].message_type = mifare_dot_generic_dot_get__version__pb2._GETVERSION
_MIFAREEXTENDED.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFAREEXTENDED.fields_by_name['mfr_classic_read_sectors'])
_MIFAREEXTENDED.fields_by_name['mfr_classic_read_sectors'].containing_oneof = _MIFAREEXTENDED.oneofs_by_name['mifare_cmd']
_MIFAREEXTENDED.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFAREEXTENDED.fields_by_name['mfr_classic_write_sectors'])
_MIFAREEXTENDED.fields_by_name['mfr_classic_write_sectors'].containing_oneof = _MIFAREEXTENDED.oneofs_by_name['mifare_cmd']
_MIFAREEXTENDED.oneofs_by_name['mifare_cmd'].fields.append(
  _MIFAREEXTENDED.fields_by_name['mfr_get_version'])
_MIFAREEXTENDED.fields_by_name['mfr_get_version'].containing_oneof = _MIFAREEXTENDED.oneofs_by_name['mifare_cmd']
_TROIKACARD.fields_by_name['troika_av3_read_ticket'].message_type = troika_dot_av3_dot_read__ticket__pb2._READTICKET
_TROIKACARD.fields_by_name['troika_av3_write_ticket'].message_type = troika_dot_av3_dot_write__ticket__pb2._WRITETICKET
_TROIKACARD.oneofs_by_name['troika_cmd'].fields.append(
  _TROIKACARD.fields_by_name['troika_av3_read_ticket'])
_TROIKACARD.fields_by_name['troika_av3_read_ticket'].containing_oneof = _TROIKACARD.oneofs_by_name['troika_cmd']
_TROIKACARD.oneofs_by_name['troika_cmd'].fields.append(
  _TROIKACARD.fields_by_name['troika_av3_write_ticket'])
_TROIKACARD.fields_by_name['troika_av3_write_ticket'].containing_oneof = _TROIKACARD.oneofs_by_name['troika_cmd']
DESCRIPTOR.message_types_by_name['Miscellaneous'] = _MISCELLANEOUS
DESCRIPTOR.message_types_by_name['ContactlessLevel1'] = _CONTACTLESSLEVEL1
DESCRIPTOR.message_types_by_name['ContactlessLevel2'] = _CONTACTLESSLEVEL2
DESCRIPTOR.message_types_by_name['Mifare'] = _MIFARE
DESCRIPTOR.message_types_by_name['PinPad'] = _PINPAD
DESCRIPTOR.message_types_by_name['ContactLevel1'] = _CONTACTLEVEL1
DESCRIPTOR.message_types_by_name['ContactLevel2'] = _CONTACTLEVEL2
DESCRIPTOR.message_types_by_name['Service'] = _SERVICE
DESCRIPTOR.message_types_by_name['StmCard'] = _STMCARD
DESCRIPTOR.message_types_by_name['NtagCard'] = _NTAGCARD
DESCRIPTOR.message_types_by_name['Gui'] = _GUI
DESCRIPTOR.message_types_by_name['Touchscreen'] = _TOUCHSCREEN
DESCRIPTOR.message_types_by_name['Complex'] = _COMPLEX
DESCRIPTOR.message_types_by_name['QrCode'] = _QRCODE
DESCRIPTOR.message_types_by_name['Cipurse'] = _CIPURSE
DESCRIPTOR.message_types_by_name['Turnstile'] = _TURNSTILE
DESCRIPTOR.message_types_by_name['MifareExtended'] = _MIFAREEXTENDED
DESCRIPTOR.message_types_by_name['TroikaCard'] = _TROIKACARD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Miscellaneous = _reflection.GeneratedProtocolMessageType('Miscellaneous', (_message.Message,), dict(
  DESCRIPTOR = _MISCELLANEOUS,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Miscellaneous)
  ))
_sym_db.RegisterMessage(Miscellaneous)

ContactlessLevel1 = _reflection.GeneratedProtocolMessageType('ContactlessLevel1', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTLESSLEVEL1,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:ContactlessLevel1)
  ))
_sym_db.RegisterMessage(ContactlessLevel1)

ContactlessLevel2 = _reflection.GeneratedProtocolMessageType('ContactlessLevel2', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTLESSLEVEL2,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:ContactlessLevel2)
  ))
_sym_db.RegisterMessage(ContactlessLevel2)

Mifare = _reflection.GeneratedProtocolMessageType('Mifare', (_message.Message,), dict(
  DESCRIPTOR = _MIFARE,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Mifare)
  ))
_sym_db.RegisterMessage(Mifare)

PinPad = _reflection.GeneratedProtocolMessageType('PinPad', (_message.Message,), dict(
  DESCRIPTOR = _PINPAD,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:PinPad)
  ))
_sym_db.RegisterMessage(PinPad)

ContactLevel1 = _reflection.GeneratedProtocolMessageType('ContactLevel1', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTLEVEL1,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:ContactLevel1)
  ))
_sym_db.RegisterMessage(ContactLevel1)

ContactLevel2 = _reflection.GeneratedProtocolMessageType('ContactLevel2', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTLEVEL2,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:ContactLevel2)
  ))
_sym_db.RegisterMessage(ContactLevel2)

Service = _reflection.GeneratedProtocolMessageType('Service', (_message.Message,), dict(
  DESCRIPTOR = _SERVICE,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Service)
  ))
_sym_db.RegisterMessage(Service)

StmCard = _reflection.GeneratedProtocolMessageType('StmCard', (_message.Message,), dict(
  DESCRIPTOR = _STMCARD,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:StmCard)
  ))
_sym_db.RegisterMessage(StmCard)

NtagCard = _reflection.GeneratedProtocolMessageType('NtagCard', (_message.Message,), dict(
  DESCRIPTOR = _NTAGCARD,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:NtagCard)
  ))
_sym_db.RegisterMessage(NtagCard)

Gui = _reflection.GeneratedProtocolMessageType('Gui', (_message.Message,), dict(
  DESCRIPTOR = _GUI,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Gui)
  ))
_sym_db.RegisterMessage(Gui)

Touchscreen = _reflection.GeneratedProtocolMessageType('Touchscreen', (_message.Message,), dict(
  DESCRIPTOR = _TOUCHSCREEN,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Touchscreen)
  ))
_sym_db.RegisterMessage(Touchscreen)

Complex = _reflection.GeneratedProtocolMessageType('Complex', (_message.Message,), dict(
  DESCRIPTOR = _COMPLEX,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Complex)
  ))
_sym_db.RegisterMessage(Complex)

QrCode = _reflection.GeneratedProtocolMessageType('QrCode', (_message.Message,), dict(
  DESCRIPTOR = _QRCODE,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:QrCode)
  ))
_sym_db.RegisterMessage(QrCode)

Cipurse = _reflection.GeneratedProtocolMessageType('Cipurse', (_message.Message,), dict(
  DESCRIPTOR = _CIPURSE,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Cipurse)
  ))
_sym_db.RegisterMessage(Cipurse)

Turnstile = _reflection.GeneratedProtocolMessageType('Turnstile', (_message.Message,), dict(
  DESCRIPTOR = _TURNSTILE,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:Turnstile)
  ))
_sym_db.RegisterMessage(Turnstile)

MifareExtended = _reflection.GeneratedProtocolMessageType('MifareExtended', (_message.Message,), dict(
  DESCRIPTOR = _MIFAREEXTENDED,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:MifareExtended)
  ))
_sym_db.RegisterMessage(MifareExtended)

TroikaCard = _reflection.GeneratedProtocolMessageType('TroikaCard', (_message.Message,), dict(
  DESCRIPTOR = _TROIKACARD,
  __module__ = 'commands_pb2'
  # @@protoc_insertion_point(class_scope:TroikaCard)
  ))
_sym_db.RegisterMessage(TroikaCard)


# @@protoc_insertion_point(module_scope)
